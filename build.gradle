 /*
 * Copyright 2020 Kato Shinya.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
}

publishing {
   publications {
        group 'org.thinkit.formatter'
        version = System.getenv("GRADLE_PUBLISH_VERSION") ?: "1.0-SNAPSHOT"

        gpr(MavenPublication) {
            from(components.java)
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/myConsciousness/sql-formatter")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.token") ?: System.getenv("TOKEN")
            }
        }
    }
}

repositories {
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/myConsciousness/dev-utils")
        credentials {
            username = "myConsciousness"
            password = "bc14cb99d01b5a247a8db0574a444f1ec3523888"
        }
    }

    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/myConsciousness/formatter-commons")
        credentials {
            username = "myConsciousness"
            password = "bc14cb99d01b5a247a8db0574a444f1ec3523888"
        }
    }

    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/myConsciousness/content-framework")
        credentials {
            username = "myConsciousness"
            password = "bc14cb99d01b5a247a8db0574a444f1ec3523888"
        }
    }

    jcenter()
}

dependencies {
    implementation 'com.google.guava:guava:29.0-jre'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'

    compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'

    implementation 'org.thinkit.common:dev-utils:1.0-SNAPSHOT'
    implementation 'org.thinkit.formatter.common:formatter-commons:1.0-SNAPSHOT'
    implementation 'org.thinkit.framework.content:content-framework:1.0-SNAPSHOT'
}

application {
    mainClassName = 'org.thinkit.formatter.EntrySqlFormatter'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.withType(Javadoc) {
    options.encoding = "UTF-8"
}

run {
    if (project.hasProperty('sql')) {
        args project.sql
    } else {
        // demo for select
        args "      select t.foo, h.foo, t.foo from foo t, foo as hoge order by something desc left outer join foo h on t.foo = h.foo and t.foo = h.foo where name like '%foofoofoo' and test in ('foo', 'foo', 'foo', 'foo');"

        // // demo for create table
        // args "create table staff (id int not null, name varchar(10) default 'NoData');"

        // // demo for comment on
        // args "COMMENT ON COLUMN emp.empno IS 'this is description for column';";

        // // demo for alter table
        // args "ALTER TABLE t2 ADD c INT UNSIGNED NOT NULL AUTO_INCREMENT, ADD PRIMARY KEY (c);";
        // args "ALTER TABLE t2 DROP COLUMN c, b, a;";
        // args "ALTER TABLE t2 ADD INDEX (d), ADD UNIQUE (a);";
        // args "ALTER TABLE t2 MODIFY a TINYINT NOT NULL, CHANGE b c CHAR(20);";
        // args "ALTER TABLE 'aaa' RENAME TO a;";
    }

    if (project.hasProperty('indent')) {
        args project.indent
    } else {
        args "-1"
    }
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
